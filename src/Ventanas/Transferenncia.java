/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Cliente;
import Clases.Debito;
import Clases.Funciones;
import Clases.Transferencias;
import Clases.Validar;
import Clases.encriptar;
import Recursos.BaseDeDatos;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Grupo 4
 */
public class Transferenncia extends javax.swing.JDialog {

    /**
     * Creates new form Transferencia
     */
    Cliente User;
    JFrame Menu;
    Debito[] debitos;
    BaseDeDatos Con;

    public Transferenncia(Cliente User, JFrame menu, Debito[] debitosCliente, BaseDeDatos Con) {
        /*
        ___________________________________________________________________________________
       |                                                                                   |
       |    Configuramos la ventana antes que se haga visible                              |
       |___________________________________________________________________________________|
         */
        this.setResizable(false);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.pack();
        this.setModal(true);

        this.User = User;
        this.Menu = menu;
        this.debitos = debitosCliente;
        this.Con = Con;
        
        initComponents();
        PinTr.setEchoChar('\u2022');
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Transferir = new rojerusan.RSButtonMetro();
        jPanel2 = new javax.swing.JPanel();
        CuentaReceptora = new rojerusan.RSMetroTextPlaceHolder();
        Monto = new rojerusan.RSMetroTextPlaceHolder();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PinTr = new rojerusan.RSPasswordTextPlaceHolder();
        ver3 = new rojerusan.RSButtonMetro();
        cancelar = new rojerusan.RSButtonMetro();
        jLabel5 = new javax.swing.JLabel();
        CuentaEmisora = new rojerusan.RSMetroTextPlaceHolder();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Transferencia Bancaria");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 560, 90));

        Transferir.setText("Transferir");
        Transferir.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Transferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferirActionPerformed(evt);
            }
        });
        jPanel1.add(Transferir, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 520, 310, 60));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        CuentaReceptora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuentaReceptoraActionPerformed(evt);
            }
        });

        Monto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MontoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Cuenta Destino :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Monto:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Pin de transaccion:");

        PinTr.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        ver3.setText("...");
        ver3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(PinTr, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ver3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Monto, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                        .addComponent(CuentaReceptora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CuentaReceptora, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Monto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(ver3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(PinTr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 680, 270));

        cancelar.setBackground(new java.awt.Color(102, 102, 102));
        cancelar.setForeground(new java.awt.Color(0, 0, 0));
        cancelar.setText("Cancelar");
        cancelar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel1.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 520, 170, 60));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Cuenta Emisora :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 205, 50));

        CuentaEmisora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuentaEmisoraActionPerformed(evt);
            }
        });
        jPanel1.add(CuentaEmisora, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 340, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CuentaReceptoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuentaReceptoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CuentaReceptoraActionPerformed

    private void MontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MontoActionPerformed

    private void TransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferirActionPerformed
        /*
            Boton de tranferencia
        */
        boolean DatosValidos = Validar.camposVacios(new String[]{CuentaReceptora.getText(), Monto.getText(), PinTr.getText()});
        if (DatosValidos) {
            try {
                /*
                ____________________________________________________________________________________
               |                                                                                    |
               |    se efectiviza la transferencia y segun las validaciones se lanzan exepciones    |
               |____________________________________________________________________________________|
                 */
                EfectivisarTransferencia(CuentaEmisora.getText(), CuentaReceptora.getText(), Integer.parseInt( Monto.getText()) , PinTr.getText());
                Funciones.salir(this, Menu);
            } catch (IllegalArgumentException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.OK_OPTION);
            } catch (UnsupportedOperationException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Atencion", JOptionPane.OK_OPTION);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error desconocido al efectivisar el pago", "Atencion", JOptionPane.OK_OPTION);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos correctamente ","Atencion", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_TransferirActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        Funciones.deseaSalir(this, Menu);;
    }//GEN-LAST:event_cancelarActionPerformed

    private void CuentaEmisoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuentaEmisoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CuentaEmisoraActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Funciones.deseaSalir(this, Menu);
    }//GEN-LAST:event_formWindowClosing
    /* metodo para ocultar y mostrar el pin */
    private void ver3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver3ActionPerformed
        if (PinTr.echoCharIsSet() == true) {
            PinTr.setEchoChar((char) 0);
        } else {
            PinTr.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_ver3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], Cliente Usuario, JFrame ventanaAnterior, Debito[] debitosCliente, BaseDeDatos Con) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transferenncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transferenncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transferenncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transferenncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transferenncia(Usuario, ventanaAnterior, debitosCliente, Con).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMetroTextPlaceHolder CuentaEmisora;
    private rojerusan.RSMetroTextPlaceHolder CuentaReceptora;
    private rojerusan.RSMetroTextPlaceHolder Monto;
    private rojerusan.RSPasswordTextPlaceHolder PinTr;
    private rojerusan.RSButtonMetro Transferir;
    private rojerusan.RSButtonMetro cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private rojerusan.RSButtonMetro ver;
    private rojerusan.RSButtonMetro ver1;
    private rojerusan.RSButtonMetro ver2;
    private rojerusan.RSButtonMetro ver3;
    // End of variables declaration//GEN-END:variables

    
    // se debe efectivisar la transferencia de dinero
    private void EfectivisarTransferencia(String cuentaEmisoraID, String cuentaReceptoraID, int monto, String pinTr) throws Exception {
        /*
            Aqui deberia ir la inserccion en la base de datos
        */
        if (User.validaPinTr(Integer.parseInt(encriptar.Encriptar(Integer.parseInt(pinTr))))) {    
            // TODO reporte
            
            Boolean existeCuenta = false;
            for (Debito debito : this.debitos) {
                if (debito.getCuenta() == Integer.parseInt(cuentaEmisoraID) && debito.getCuenta() != Integer.parseInt(cuentaReceptoraID) ) {
                    existeCuenta = true;
                    Debito cuentaReceptora = Con.getCuentaDebitoPorIDCuenta(Integer.parseInt(cuentaReceptoraID));
                    
                    debito.quitarMonto(monto);
                    cuentaReceptora.cargarMonto(monto);
                    
                    Transferencias transferencia = new Transferencias(debito, cuentaReceptora);
                    
                    Con.agregarTransferencia(transferencia);
                    /* se actualiza el menu */
                    Funciones.actualizarSaldo(debito.getMonto()+" gs.");
                    /* se imprime el ticket */
                    Funciones.generarPdf(new String[] {
                            "Ticket de Transferencia",
                            "Cuenta Emisora:", cuentaEmisoraID,
                            "Cuenta Receptora:", cuentaReceptoraID,
                            "Monto:", Funciones.setMoneyFormat(monto + "") + " gs.",
                            "Saldo Restante:", Funciones.setMoneyFormat(debito.getMonto() + "") + " gs.",
                            
                    
                    });
                    
                }
            }
            
            if (!existeCuenta) {
                throw new IllegalArgumentException("No existe la cuenta de usuario insertada");
            }
            
            JOptionPane.showMessageDialog(null, "Deposito efectivisado sin problemas ","Operacion Exitosa", JOptionPane.INFORMATION_MESSAGE );
            
        } else {
//            Funciones.MensajeDeAlerta(2, "Error", "Pin incorrecto");
            throw new IllegalArgumentException("Pin incorrecto");
        }
    }

}
